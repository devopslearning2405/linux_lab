# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yamlt

trigger:
- master



# pool:
#   vmImage: 'ubuntu-latest'

# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '12.x'
#   displayName: 'Install Node.js'

# - script: |
#     ls
#     npm install
#   displayName: 'npm install and build'

# - task: CopyFiles@2
#   inputs:
#     sourceFolder: '$(Build.SourcesDirectory)'
#     contents: '*.tgz' 
#     targetFolder: $(Build.ArtifactStagingDirectory)/npm
#   displayName: 'Copy npm package'

# - task: CopyFiles@2
#   inputs:
#     sourceFolder: '.'
#     # contents: 'package.json' 
#     targetFolder: '$(Build.ArtifactStagingDirectory)'
#   displayName: 'Copy code'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: be-api
#   displayName: 'Publish npm artifact'


# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# trigger:
#   - development

# pr: none

stages:
  - stage: build
    displayName: "Build"
    jobs:
      - job: build_test
        displayName: "Archive API"
        pool:
          vmImage: ubuntu-latest
        steps:

          - task: PublishPipelineArtifact@1
            displayName: "Publish API Artifact"
            inputs:
              # pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              targetPath: "$(System.DefaultWorkingDirectory)"
              # artifactName: be-api
              artifact: "be-api"
              publishLocation: "pipeline"
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: be-api
#   displayName: 'Publish npm artifact'

  - stage: deploy
    displayName: "Deploy"
    jobs:
      - deployment: VMDeploy
        displayName: Deploy API
        environment:
          name: dev
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  displayName: "Create .env"
                  inputs:
                    script: |
                      echo "abc"
                      pwd
                      ls
                    workingDirectory: $(Agent.BuildDirectory)
                    failOnStderr: true

                - task: CopyFiles@2
                  displayName: "Copy to deploy folder"
                  inputs:
                    SourceFolder: "$(Agent.BuildDirectory)"
                    Contents: "**"
                    TargetFolder: "/etc/server"
                    CleanTargetFolder: true
                    OverWrite: true
                - task: CmdLine@2
                  displayName: "Install, Build"
                  inputs:
                    script: |
                      whoami
                      pwd
                      ls
                    # workingDirectory: $(Agent.BuildDirectory)/api-drop

